"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[3391],{6177:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"dullahan/asset/crud","title":"Asset API","description":"Asset Bundle comes packaged with REST API for managing your assets. Core idea is to produce a tools that will allow","source":"@site/docs/dullahan/asset/crud.md","sourceDirName":"dullahan/asset","slug":"/dullahan/asset/crud","permalink":"/docs/dullahan/asset/crud","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/dullahan/asset/crud.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Asset API"},"sidebar":"tutorialSidebar","previous":{"title":"Intro","permalink":"/docs/dullahan/asset/"},"next":{"title":"Manage interfaces","permalink":"/docs/dullahan/asset/programatically_manage"}}');var s=t(4848),i=t(8453);const l={sidebar_position:1,sidebar_label:"Asset API"},o="Asset API",r={},d=[{value:"Upload new asset",id:"upload-new-asset",level:2},{value:"Retrieve uploaded image",id:"retrieve-uploaded-image",level:2},{value:"Retrieve list of image",id:"retrieve-list-of-image",level:2},{value:"Reupload image",id:"reupload-image",level:2},{value:"Create folder",id:"create-folder",level:2},{value:"Move/rename the asset",id:"moverename-the-asset",level:2},{value:"Remove the asset",id:"remove-the-asset",level:2},{value:"Retrieve the assets contents",id:"retrieve-the-assets-contents",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"asset-api",children:"Asset API"})}),"\n",(0,s.jsxs)(n.p,{children:["Asset Bundle comes packaged with REST API for managing your assets. Core idea is to produce a tools that will allow\nfor creating hierarchical structure with abstract files and folders. All of that topped on Jackrabbit service if you\nwould require to extend even further your file management or needed access via\n",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/WebDAV",children:"WebDAV"})," to your files."]}),"\n",(0,s.jsx)(n.h2,{id:"upload-new-asset",children:"Upload new asset"}),"\n",(0,s.jsxs)(n.p,{children:["To upload new asset we use ",(0,s.jsx)(n.code,{children:"/_/user/asset/upload/image"})," with POST method, it accepts three parameters: name under we want\nto upload our file, path where we want to locate it and the actual image:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"POST http://dullahan.localhost/_/user/asset/upload/image\nContent-Type: multipart/form-data\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\nname=example.png\npath=/test/path/\nimage=@example.png;type=image/png\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["End point requires the usage of ",(0,s.jsx)(n.code,{children:"multipart/form-data"})," and is only available to logged users"]})}),"\n",(0,s.jsx)(n.p,{children:"This request will result in:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Image uploaded successfully",\n  "status": 200,\n  "success": true,\n  "data": {\n    "image": {\n      "id": 1,\n      "name": "example",\n      "extension": "png",\n      "src": "http://dullahan.localhost/_/asset/1/jackrabbit?v=1753721780",\n      "weight": 21049,\n      "mime_type": "image/png",\n      "weight_readable": "21.05 KB",\n      "pointers_amount": 0,\n      "path": "/test/path/example.png"\n    }\n  },\n  "offset": null,\n  "limit": null,\n  "total": null,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Response comes with the public path to the image (the actual URL can differ based on used file system abstraction).\nNotice that those are not pretty URL and they contain the id and version of the image. This is, so you can easily\nand without care move and rename the asset without having to worry that URL will become obsolete or point to wrong\nasset. Version is just used for cache bursting, it doesn't actually retrieve image with that version."})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"You cannot create asset in directory that doesn't exist."})}),"\n",(0,s.jsx)(n.h2,{id:"retrieve-uploaded-image",children:"Retrieve uploaded image"}),"\n",(0,s.jsxs)(n.p,{children:["To retrieve information about uploaded image we use ",(0,s.jsx)(n.code,{children:"/_/asset/{id}"})," which accepts one path parameter: id of the image."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET http://dullahan.localhost/_/asset/1\nContent-Type: application/json\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will result in:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Image retrieved successfully",\n  "status": 200,\n  "success": true,\n  "data": {\n    "image": {\n      "id": 1,\n      "name": "example",\n      "extension": "png",\n      "src": "http://dullahan.localhost/_/asset/1/jackrabbit?v=1753721780",\n      "weight": 21049,\n      "mime_type": "image/png",\n      "weight_readable": "21.05 KB",\n      "thumbnails": [],\n      "pointers_amount": 0,\n      "path": "/test/path/example.png"\n    }\n  },\n  "offset": null,\n  "limit": null,\n  "total": null,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"retrieve-list-of-image",children:"Retrieve list of image"}),"\n",(0,s.jsxs)(n.p,{children:["To retrieve information about uploaded images we use ",(0,s.jsx)(n.code,{children:"/_/asset/list"})," which accepts one query parameter pagination\n(",(0,s.jsx)(n.a,{href:"/docs/dullahan/entity/crud#pagination",children:"here"})," you can read more about pagination object)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET http://dullahan.localhost/_/asset/list\nContent-Type: application/json\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\n\n{\n    offset: 0,\n    limit: 100,\n    filter: [["directory", "=", "/test/"]]\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Not specifying the directory ",(0,s.jsx)(n.code,{children:"filter"})," will result in assets from every directory"]})}),"\n",(0,s.jsx)(n.p,{children:"And out result:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Images retrieved successfully",\n  "status": 200,\n  "success": true,\n  "data": {\n    "images": [\n      {\n        "id": 1,\n        "name": "example",\n        "extension": "png",\n        "src": "http://dullahan.localhost/_/asset/11/jackrabbit?v=1753721780",\n        "weight": 21049,\n        "mime_type": "image/png",\n        "weight_readable": "21.05 KB",\n        "thumbnails": [],\n        "pointers_amount": 0,\n        "path": "/test/path/example.png"\n      }\n    ]\n  },\n  "offset": 0,\n  "limit": 10,\n  "total": 1,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"reupload-image",children:"Reupload image"}),"\n",(0,s.jsxs)(n.p,{children:["When you want to replace already existing asset with different content you can use ",(0,s.jsx)(n.code,{children:"/_/user/asset/upload/image/{id}"}),"\nwhich accepts one parameter in the path: ",(0,s.jsx)(n.code,{children:"id"})," of the asset and one parameter in the body: the asset to replace with."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"POST http://dullahan.localhost/_/user/asset/upload/image/1\nContent-Type: multipart/form-data\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\nimage=@new_example.jpg;type=image/jpg\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will result in similar response when you upload the image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Image updated successfully",\n  "status": 200,\n  "success": true,\n  "data": {\n    "image": {\n      "id": 1,\n      "name": "example",\n      "extension": "jpg",\n      "src": "http://dullahan.localhost/_/asset/1/jackrabbit?v=1753722902",\n      "weight": 146761,\n      "mime_type": "image/jpeg",\n      "weight_readable": "146.76 KB",\n      "thumbnails": [],\n      "pointers_amount": 0,\n      "path": "/test/path/example.jpg"\n    }\n  },\n  "offset": null,\n  "limit": null,\n  "total": null,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{title:"Automatic extension change",type:"info",children:(0,s.jsx)(n.p,{children:"Notice that system detected that extensions don't match and updated it automatically."})}),"\n",(0,s.jsx)(n.h2,{id:"create-folder",children:"Create folder"}),"\n",(0,s.jsxs)(n.p,{children:["To create folder we use ",(0,s.jsx)(n.code,{children:"/_/user/asset/upload/folder"})," which accepts in the body two parameters: ",(0,s.jsx)(n.code,{children:"parent"})," which is the\npath to the parent folder and ",(0,s.jsx)(n.code,{children:"name"})," of new folder:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST http://dullahan.localhost/_/user/asset/upload/image/1\nContent-Type: application/json\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\n{\n  "parent": "/",\n  "name": "exampleFolder"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"This will result in:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Folder created successfully",\n  "status": 200,\n  "success": true,\n  "data": {\n    "folder": {\n      "id": 2,\n      "name": "exampleFolder",\n      "extension": "",\n      "src": "http://dullahan.localhost/_/asset/2/jackrabbit?v=1753723343",\n      "weight": 4000,\n      "mime_type": "",\n      "weight_readable": "4.00 KB",\n      "thumbnails": [],\n      "pointers_amount": 0,\n      "path": "/exampleFolder"\n    }\n  },\n  "offset": null,\n  "limit": null,\n  "total": null,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"moverename-the-asset",children:"Move/rename the asset"}),"\n",(0,s.jsxs)(n.p,{children:["To move an asset we use ",(0,s.jsx)(n.code,{children:"/_/user/asset/move"}),", you can also rename it with the same endpoint. It accepts two parameters\nin the body: ",(0,s.jsx)(n.code,{children:"from"})," and ",(0,s.jsx)(n.code,{children:"to"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST http://dullahan.localhost/_/user/asset/move\nContent-Type: application/json\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\n{\n  "from": "/test/path/example.jpg",\n  "name": "/exampleFolder/move_example.jpg"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"And the response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Asset moved successfully",\n  "status": 200,\n  "success": true,\n  "data": {\n    "asset": {\n      "id": 1,\n      "name": "move_example",\n      "extension": "jpg",\n      "src": "http://dullahan.localhost/_/asset/1/jackrabbit?v=1753723819",\n      "weight": 146761,\n      "mime_type": "image/jpeg",\n      "weight_readable": "146.76 KB",\n      "thumbnails": [],\n      "pointers_amount": 0,\n      "path": "/exampleFolder/move_example.jpg"\n    }\n  },\n  "offset": null,\n  "limit": null,\n  "total": null,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Notice that URL to the asset stayed the same"})}),"\n",(0,s.jsx)(n.h2,{id:"remove-the-asset",children:"Remove the asset"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the asset we use ",(0,s.jsx)(n.code,{children:"/_/user/asset/{id}/remove"})," which accepts one parameter in the path: the id of the asset."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"DELETE http://dullahan.localhost/_/user/asset/1/remove\nContent-Type: application/json\nAuthorization: ...\nX-CSRF-Token: ...\nAccept: application/json\n"})}),"\n",(0,s.jsx)(n.p,{children:"Which will result in:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Asset successfully deleted",\n  "status": 200,\n  "success": true,\n  "data": [],\n  "offset": null,\n  "limit": null,\n  "total": null,\n  "errors": []\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"You can remove folders using the same End Point."})}),"\n",(0,s.jsx)(n.h2,{id:"retrieve-the-assets-contents",children:"Retrieve the assets contents"}),"\n",(0,s.jsxs)(n.p,{children:["There is an endpoint responsible for streaming the asset back ",(0,s.jsx)(n.code,{children:"/_/asset/{id}/jackrabbit"}),". It is available only if you\nare using Jackrabbit file system implementation."]}),"\n",(0,s.jsx)(n.admonition,{title:"Cache the response",type:"tip",children:(0,s.jsx)(n.p,{children:"It is wise to filter movement to that End Point with big expiry time on the caching response, as those responses with\nthe assets contents are taken straight from database. So, if your are using NGINX or Varnish for request caching\nfill obligated to set late expiry time on that endpoint."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var a=t(6540);const s={},i=a.createContext(s);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);