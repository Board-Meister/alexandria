"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[4457],{264:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"dullahan/user/database","title":"Database Schema","description":"User bundles is made of two tables: user (User entity) and user_data (UserData entity). Each row in user table","source":"@site/docs/dullahan/user/database.md","sourceDirName":"dullahan/user","slug":"/dullahan/user/database","permalink":"/docs/dullahan/user/database","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/dullahan/user/database.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Database Schema"},"sidebar":"tutorialSidebar","previous":{"title":"Customization","permalink":"/docs/dullahan/user/customization"},"next":{"title":"Entity Bundle","permalink":"/docs/category/entity-bundle"}}');var n=t(4848),r=t(8453);const d={sidebar_position:4,sidebar_label:"Database Schema"},o="Database Schema",i={},l=[{value:"<code>user</code> table",id:"user-table",level:2},{value:"<code>user_data</code> table",id:"user_data-table",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"database-schema",children:"Database Schema"})}),"\n",(0,n.jsxs)(a.p,{children:["User bundles is made of two tables: ",(0,n.jsx)(a.code,{children:"user"})," (User entity) and ",(0,n.jsx)(a.code,{children:"user_data"})," (UserData entity). Each row in ",(0,n.jsx)(a.code,{children:"user"})," table\nhas equivalent in the ",(0,n.jsx)(a.code,{children:"user_data"})," table on OneToOne relation."]}),"\n",(0,n.jsxs)(a.h2,{id:"user-table",children:[(0,n.jsx)(a.code,{children:"user"})," table"]}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"user"})," table is private dataset of the User. It consists of all user private data that should never be exposed to\nthe public like activity/forgotten password/change email tokens, password, login, roles etc."]}),"\n",(0,n.jsxs)(a.h2,{id:"user_data-table",children:[(0,n.jsx)(a.code,{children:"user_data"})," table"]}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"user_data"})," table is made of public data like name, public ID and additions from other modules. If you are expanding\non the user functionality and require place to store additional information about the user ",(0,n.jsx)(a.code,{children:"user_data"})," is a first place\nyou should think of."]})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>d,x:()=>o});var s=t(6540);const n={},r=s.createContext(n);function d(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);