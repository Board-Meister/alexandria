"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[1622],{7986:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"dullahan/user/authentication","title":"Authentication","description":"Authentication relies on generating JWT token with /_/login endpoint, sending it in Authorization as Bearer","source":"@site/docs/dullahan/user/authentication.md","sourceDirName":"dullahan/user","slug":"/dullahan/user/authentication","permalink":"/docs/dullahan/user/authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/dullahan/user/authentication.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Authentication"},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/dullahan/user/configuration"},"next":{"title":"Customization","permalink":"/docs/dullahan/user/customization"}}');var i=t(4848),s=t(8453);const o={sidebar_position:2,sidebar_label:"Authentication"},a="Authentication",h={},l=[{value:"Stateless",id:"stateless",level:2},{value:"CSRF Token",id:"csrf-token",level:2},{value:"Prologing current session",id:"prologing-current-session",level:2},{value:"How to: Swagger authentication",id:"how-to-swagger-authentication",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"authentication",children:"Authentication"})}),"\n",(0,i.jsxs)(n.p,{children:["Authentication relies on generating JWT token with ",(0,i.jsx)(n.code,{children:"/_/login"})," endpoint, sending it in ",(0,i.jsx)(n.code,{children:"Authorization"})," as ",(0,i.jsx)(n.code,{children:"Bearer"}),"\r\n(together with CSRF token) and refreshing with ",(0,i.jsx)(n.code,{children:"/_/user/token/refresh"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",metastring:'title="login.http"',children:"POST /_/login\r\nHost: dullahan.local\r\nContent-Type: application/json\r\n\r\n{\r\n  username: 'user@dullahan.local',\r\n  password: 'password'\r\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="output"',children:'{\r\n  "message": "User authenticated",\r\n  "status": 200,\r\n  "success": true,\r\n  "data": {\r\n    "auth": "eyJhbGciOiJ....JNPiBOlR-3yHun-HGK6KePJLjfg",\r\n    "csrf": "755a17106f1....s21cc9ebbdde8fa8c7b0d1b27b5",\r\n    "user": {\r\n      "details": {...},\r\n      "roles": [\r\n        "ROLE_USER"\r\n      ]\r\n    }\r\n  },\r\n  "offset": null,\r\n  "limit": null,\r\n  "total": null,\r\n  "errors": []\r\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above we have send a login request and received successful response with user identity (",(0,i.jsx)(n.code,{children:"user"}),"), user\r\nsigned CSRF token (",(0,i.jsx)(n.code,{children:"csrf"}),") and authentication JWT token (",(0,i.jsx)(n.code,{children:"auth"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"stateless",children:"Stateless"}),"\n",(0,i.jsxs)(n.p,{children:["Dullahan authentication is by default stateless. Stateless authentication is a method where the server doesn't store\r\nuser session information. Thanks to this Dullahan authentication is easy to integrate and can be used as SSO between\r\nmultiple domains. To achieve this in secure way we are using ",(0,i.jsx)(n.a,{href:"https://jwt.io/introduction",children:"JWT"}),"\r\nand ",(0,i.jsx)(n.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#alternative-using-a-double-submit-cookie-pattern",children:"Signed Double-Submit Cookie"}),"\r\nas defined by ",(0,i.jsx)(n.a,{href:"https://owasp.org/",children:"OWASP"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Default implementation defines that auth token should be included in the ",(0,i.jsx)(n.code,{children:"Authorization"})," header following Bearer Scheme\r\ntogether with CSRF token the custom header ",(0,i.jsx)(n.code,{children:"X-CSRF-Token"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",metastring:'title="user_details.http"',children:"GET /_/user/manage/get\r\nHost: dullahan.local\r\nContent-Type: application/json\r\nAuthorization: Bearer eyJhbGciOiJ....JNPiBOlR-3yHun-HGK6KePJLjfg\r\nX-CSRF-Token: 755a17106f1....s21cc9ebbdde8fa8c7b0d1b27b5\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Custom CSRF handler",type:"tip",children:(0,i.jsxs)(n.p,{children:["If you wish to implement custom CSRF token handling check out ",(0,i.jsx)(n.a,{href:"/docs/dullahan/user/customization#custom-csrf-token-retrieval",children:"this guide"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{title:"CORS",type:"warning",children:(0,i.jsxs)(n.p,{children:["When using default implementation of CSRF handling make sure that your ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Access-Control-Allow-Headers",children:"CORS"})," allows for custom header ",(0,i.jsx)(n.code,{children:"X-CSRF-Token"})]})}),"\n",(0,i.jsx)(n.h2,{id:"csrf-token",children:"CSRF Token"}),"\n",(0,i.jsxs)(n.p,{children:["As mentioned above the CSRF token is a ",(0,i.jsx)(n.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#alternative-using-a-double-submit-cookie-pattern",children:"Signed Double-Submit Cookie"})," although send via custom header (",(0,i.jsx)(n.code,{children:"X-CSRF-Token"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"Each CSRF token is assigned to JWT and is valid through the whole session (no need to replace it per request).\r\nAlthough, you will have to replace it when your session expiries (as defined in JWT) with newly generated token you will\r\nreceive when prologing the session."}),"\n",(0,i.jsxs)(n.p,{children:["CSRF token and JWT are linked by ",(0,i.jsx)(n.code,{children:"session"})," ",(0,i.jsx)(n.a,{href:"https://uuid7.com/",children:"UUIDv7"})," identifier which is used to generate CSRF token\r\nand can be found in the JWT payload:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n\r\n  "user": "user@dullahan.localhost",                  // User identifier\r\n  "user_id": 1,                                       // User ID\r\n  "session": "0197875f-590e-739d-b386-4d4b18f5ebfa"   // Session identifier\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"This value is regenerated each time new token is issued which makes CSRF token valid through whole JWT session."}),"\n",(0,i.jsx)(n.h2,{id:"prologing-current-session",children:"Prologing current session"}),"\n",(0,i.jsxs)(n.p,{children:["Each JWT token has its own expiry time as defined in ",(0,i.jsx)(n.code,{children:"exp"})," header alongside other attributes:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n  "alg": "PS256",                 // Algorithm used\r\n  "jti": "api_62101u660f45d19e",  // The unique identifier\r\n  "iss": "Dullahan",              // The issuer\r\n  "aud": "Users",                 // The recipients\r\n  "iat": 1750318646,              // The time at which the JWT was issued (timestamp)\r\n  "nbf": 1750318646,              // The time before which the JWT MUST NOT be accepted for processing (timestamp)\r\n  "exp": 1750405046               // The expiration time on or after which the JWT MUST NOT be accepted for processing (timestamp)\r\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Depending on this parameter and other conditions service can decline the user access to requested resources.\r\nTo prevent that from happening you should request new token before the old one expiries using ",(0,i.jsx)(n.code,{children:"/_/user/token/refresh"}),"\r\nroute."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",metastring:'title="refresh.http"',children:"PUT /_/user/token/refresh\r\nHost: dullahan.local\r\nContent-Type: application/json\r\nAuthorization: Bearer eyJhbGciOiJ....JNPiBOlR-3yHun-HGK6KePJLjfg\r\nX-CSRF-Token: 755a17106f1....s21cc9ebbdde8fa8c7b0d1b27b5\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="response"',children:'{\r\n  "message": "Token refreshed",\r\n  "status": 200,\r\n  "success": true,\r\n  "data": {\r\n    "auth": "eyJhbGciOiJQUzI1NiI....zGo6Q",\r\n    "csrf": "93a449b6196e68d0a65....2668d"\r\n  },\r\n  "offset": null,\r\n  "limit": null,\r\n  "total": null,\r\n  "errors": []\r\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"Custom expiry time",type:"tip",children:(0,i.jsxs)(n.p,{children:["The default expiry time is set to be an hour in production (",(0,i.jsx)(n.code,{children:"prod"}),") and whole day in development (",(0,i.jsx)(n.code,{children:"dev"}),") environment.\r\nIf you wish to change the expiry time of JWT or vary it depending on the user, check out\r\n",(0,i.jsx)(n.a,{href:"/docs/dullahan/user/customization#custom-jwt-expiry-time",children:"this section"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{title:"Multiple tokens for the same user",type:"warning",children:(0,i.jsxs)(n.p,{children:["One user can generate multiple auth tokens at the same time without them colliding or expiring each other.\r\nIf you need to have one session per user check out ",(0,i.jsx)(n.a,{href:"/docs/dullahan/user/customization#one-session-per-user",children:"this guide"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-swagger-authentication",children:"How to: Swagger authentication"}),"\n",(0,i.jsxs)(n.p,{children:["When using ",(0,i.jsx)(n.a,{href:"https://symfony.com/bundles/NelmioApiDocBundle/current/index.html",children:"NelmioApiDoc Bundle"})," you can define how\r\nto authenticate yourself in their package config file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="config/packages/nelmio_api_doc.yaml"',children:"nelmio_api_doc:\r\n    areas:\r\n        path_patterns:\r\n            - ^/_\r\n        name_patterns:\r\n            - ^api\\_\r\n    documentation:\r\n        info:\r\n            title: Dullahan\r\n            description:\r\n            version: 1.0.0\r\n        security:\r\n            - Bearer: []\r\n            - CSRF: []\r\n        components:\r\n            securitySchemes:\r\n                Bearer:\r\n                    type: http\r\n                    scheme: bearer\r\n                    bearerFormat: JWT\r\n                CSRF:\r\n                    type: apiKey\r\n                    in: header\r\n                    name: X-CSRF-Token\r\n                    description: CSRF token\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now, you can use ",(0,i.jsx)(n.code,{children:"/_/login"})," route to generate tokens and then ",(0,i.jsx)(n.code,{children:"Authorize"})," button at the top od the page (or lock icon\r\nvisible at each route) to save them for the next requests. You can read a little more about it\r\n",(0,i.jsx)(n.a,{href:"/docs/dullahan/api#automatic-openapi-documentation",children:"here"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);