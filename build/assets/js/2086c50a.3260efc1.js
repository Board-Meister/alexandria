"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[1858],{2394:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"dullahan/thumbnail/integration_entity","title":"Entity Bundle integration","description":"Integration with Entity Bundle is achieved by Thumbnail attribute. Field marked with Asset attribute can be","source":"@site/docs/dullahan/thumbnail/integration_entity.md","sourceDirName":"dullahan/thumbnail","slug":"/dullahan/thumbnail/integration_entity","permalink":"/docs/dullahan/thumbnail/integration_entity","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/dullahan/thumbnail/integration_entity.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Entity Bundle integration"},"sidebar":"tutorialSidebar","previous":{"title":"Asset Bundle extension","permalink":"/docs/dullahan/thumbnail/modification_asset"},"next":{"title":"Manage interfaces","permalink":"/docs/dullahan/thumbnail/interfaces"}}');var a=i(4848),l=i(8453);const r={sidebar_position:2,sidebar_label:"Entity Bundle integration"},s="Entity Bundle integration",h={},d=[{value:"Thumbnail attribute",id:"thumbnail-attribute",level:2},{value:"code",id:"code",level:3},{value:"width/height",id:"widthheight",level:3},{value:"autoResize",id:"autoresize",level:3},{value:"crop",id:"crop",level:3}];function o(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"entity-bundle-integration",children:"Entity Bundle integration"})}),"\n",(0,a.jsxs)(t.p,{children:["Integration with Entity Bundle is achieved by ",(0,a.jsx)(t.code,{children:"Thumbnail"})," attribute. Field marked with ",(0,a.jsx)(t.code,{children:"Asset"})," attribute can be\r\nadditionally described using ",(0,a.jsx)(t.code,{children:"Thumbnail"})," attributes:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"// ...\r\nuse Dullahan\\Thumbnail\\Domain\\Attribute\\Thumbnail;\r\n\r\n// ...\r\nclass Post implements OwnerlessManageableInterface\r\n{\r\n    // ...\r\n\r\n    #[Dullahan\\Field]\r\n    #[Asset]\r\n    #[Thumbnail('small', width: 100, autoResize: true, crop: [100, 100])]\r\n    #[Thumbnail('medium', width: 300, autoResize: true, crop: [300, 300])]\r\n    #[Thumbnail('big', width: 600, autoResize: true, crop: [600, 600])]\r\n    private ?AssetPointer $hero = null;\r\n\r\n    // ...\n"})}),"\n",(0,a.jsx)(t.p,{children:"At the example above we've added 3 different thumbnail definitions:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"small - The small thumbnail will have the width of 100px, the height will be automatically resized with max size of\r\nthe image being 100px x 100px"}),"\n",(0,a.jsx)(t.li,{children:"medium - The small thumbnail will have the width of 300px, the height will be automatically resized with max size of\r\nthe image being 300px x 300px"}),"\n",(0,a.jsx)(t.li,{children:"big - The small thumbnail will have the width of 600px, the height will be automatically resized with max size of\r\nthe image being 600px x 600px"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["This thumbnail setting will be resolved each time an ",(0,a.jsx)(t.code,{children:"Asset"})," is assigned to the Entity. During update or creation of\r\nthe Entity, Thumbnail Bundle, will automatically generate unique thumbnails as per definition."]}),"\n",(0,a.jsx)(t.admonition,{title:"Duplicated thumbnails",type:"tip",children:(0,a.jsxs)(t.p,{children:["If the assigned image has already thumbnail with the same settings, the already generated ",(0,a.jsx)(t.code,{children:"Thumbnail"})," entity will be\r\nreused with new ",(0,a.jsx)(t.code,{children:"AssetThumbnailPointer"}),". Thanks to this there will we always reuse already existing thumbnail."]})}),"\n",(0,a.jsx)(t.p,{children:"Later when requesting the Entity from the service via REST API you will receive links to the generated thumbnails:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\r\n  "message": "Entity retrieved successfully",\r\n  "success": true,\r\n  "status": 200,\r\n  "data": {\r\n    "entity": {\r\n      "id": 1,\r\n      "image": {\r\n        "id": 1,\r\n        "src": "http://cms.local/_/asset/15/jackrabbit?v=1753791831",\r\n        "name": "example",\r\n        "weight": 5406,\r\n        "weight_readable": "5.41 KB",\r\n        "extension": "png",\r\n        "thumbnails": {\r\n          "small": "http://cms.local/_/asset/thumbnail/1/jackrabbit",\r\n          "medium": "http://cms.local/_/asset/thumbnail/2/jackrabbit",\r\n          "big": "http://cms.local/_/asset/thumbnail/3/jackrabbit"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  "limit": null,\r\n  "offset": null,\r\n  "total": null,\r\n  "errors": []\r\n}\n'})}),"\n",(0,a.jsx)(t.h2,{id:"thumbnail-attribute",children:"Thumbnail attribute"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"Thumbnail"})," attribute has few attributes to allow defining a matching resized image:"]}),"\n",(0,a.jsx)(t.h3,{id:"code",children:"code"}),"\n",(0,a.jsx)(t.p,{children:"The key/id of the thumbnail by which you can later access it."}),"\n",(0,a.jsx)(t.h3,{id:"widthheight",children:"width/height"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"Thumbnail"})," requires for you to provide ",(0,a.jsx)(t.code,{children:"height"})," or ",(0,a.jsx)(t.code,{children:"width"}),", or both for the image resize."]}),"\n",(0,a.jsx)(t.h3,{id:"autoresize",children:"autoResize"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"autoResize"})," defines if the image should be automatically scaled down with the same width/height ratio. If not set\r\nto true, script will resize image only to defined dimensions."]}),"\n",(0,a.jsx)(t.h3,{id:"crop",children:"crop"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"crop"})," parameter defines the maximal boundaries of the image. It works well with ",(0,a.jsx)(t.code,{children:"autoResize"})," parameter, lets take\r\nfor an example definition like this:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"    #[Thumbnail('small', width: 100, autoResize: true, crop: [100, 100])]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Without the ",(0,a.jsx)(t.code,{children:"crop"})," if given a image of width 100px and height 1000px, script won't change given image at all. But with\r\nthe ",(0,a.jsx)(t.code,{children:"crop"})," it will be cut to the maximal size. By the default the cropping starts from the top left corner but it can be\r\nchanged."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"crop"})," is an array that accepts 5 arguments:"]}),"\n",(0,a.jsxs)(t.ol,{start:"0",children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The width of the crop"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The height of the crop"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The transformation on the X axis in pixels"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The transformation on the Y axis in pixels"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The one of possible starting points. It is made of two two letter (first one is for X axis, second for Y),\r\neach letter has 3 possible values:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"S - stands for the Start which is left for the X, and top for Y"}),"\n",(0,a.jsx)(t.li,{children:"M - stands for the Middle"}),"\n",(0,a.jsx)(t.li,{children:"E - stands for the End which is right for the X, and bottom for Y"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["You can set values like ",(0,a.jsx)(t.code,{children:"MM"})," for the middle of the image or ",(0,a.jsx)(t.code,{children:"SE"}),", so the cut starts at the bottom left."]}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var n=i(6540);const a={},l=n.createContext(a);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);