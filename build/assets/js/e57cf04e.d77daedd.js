"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[6852],{1380:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"marshal/registration","title":"Registration cheat sheet","description":"This document explains all parameters of registration config used to register new plugin.","source":"@site/docs/marshal/registration.md","sourceDirName":"marshal","slug":"/marshal/registration","permalink":"/docs/marshal/registration","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/marshal/registration.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"sidebar_label":"Registration cheat sheet"},"sidebar":"tutorialSidebar","previous":{"title":"Tagging plugins","permalink":"/docs/marshal/tags"},"next":{"title":"API","permalink":"/docs/marshal/methods"}}');var i=s(4848),t=s(8453);const a={sidebar_position:7,sidebar_label:"Registration cheat sheet"},c="Registration cheat sheet",l={},d=[{value:"<code>entry</code>*",id:"entry",level:2},{value:"<code>source</code>*",id:"source",level:3},{value:"<code>namespace</code>*",id:"namespace",level:3},{value:"<code>name</code>*",id:"name",level:3},{value:"<code>version</code>*",id:"version",level:3},{value:"<code>arguments</code>",id:"arguments",level:3},{value:"<code>type</code>*",id:"type",level:2},{value:"<code>tags</code>",id:"tags",level:2},{value:"<code>requires</code>",id:"requires",level:2},{value:"<code>lazy</code>",id:"lazy",level:2},{value:"<code>asset</code>",id:"asset",level:2},{value:"<code>src</code>*",id:"src",level:3},{value:"<code>resource</code>",id:"resource",level:2},{value:"<code>src</code>*",id:"src-1",level:3}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"registration-cheat-sheet",children:"Registration cheat sheet"})}),"\n",(0,i.jsx)(n.p,{children:"This document explains all parameters of registration config used to register new plugin."}),"\n",(0,i.jsx)(n.p,{children:"Parameters with asterisk are required."}),"\n",(0,i.jsxs)(n.h2,{id:"entry",children:[(0,i.jsx)(n.code,{children:"entry"}),"*"]}),"\n",(0,i.jsx)(n.p,{children:"Entry is the most important part, it defines the uniqueness of the plugin and ability to be injected elsewhere."}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h3,{id:"source",children:[(0,i.jsx)(n.code,{children:"source"}),"*"]}),"\n",(0,i.jsx)(n.p,{children:"Defines where the plugins source code is. Possible values:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),"- a URL path to the entry file (even blob path) which works with ",(0,i.jsx)(n.code,{children:"import"})," function"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"object"})," - already initialized object be it a class or actual object. Such plugin will not be initialized second time\r\nand won't receive any injections"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    entry: {\r\n        source: new Router() | 'http://cdn.boardmeister.com/plugin/boardmeister/router',\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h3,{id:"namespace",children:[(0,i.jsx)(n.code,{children:"namespace"}),"*"]}),"\n",(0,i.jsx)(n.p,{children:"A unique name defining the owner of the plugin, it can be any text."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    entry: {\r\n        namespace: 'boardmeister',\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h3,{id:"name",children:[(0,i.jsx)(n.code,{children:"name"}),"*"]}),"\n",(0,i.jsx)(n.p,{children:"A semi-unique name of the plugin, it just have to not repeat in the owners space, it can be any text."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    entry: {\r\n        name: 'router',\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h3,{id:"version",children:[(0,i.jsx)(n.code,{children:"version"}),"*"]}),"\n",(0,i.jsx)(n.p,{children:"The current version of the plugin, it can be any text"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    entry: {\r\n        version: '1.0.0.',\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:(0,i.jsx)(n.code,{children:"arguments"})}),"\n",(0,i.jsx)(n.p,{children:"An array of any kind of variables, they will be provided to the constructor of the plugin when initialized in the\r\narrays' order."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'{\r\n    entry: {\r\n        arguments: [\r\n            "first",\r\n            { "second" : 1 },\r\n            new Observer(),\r\n        ]\n'})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h2,{id:"type",children:[(0,i.jsx)(n.code,{children:"type"}),"*"]}),"\n",(0,i.jsxs)(n.p,{children:["Defined the type of plugin, possible values: ",(0,i.jsx)(n.code,{children:"module"})," or ",(0,i.jsx)(n.code,{children:"scope"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    type: 'scope',\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"It can be more",type:"tip",children:(0,i.jsxs)(n.p,{children:["The only additional functionality and change of behavior happens on ",(0,i.jsx)(n.code,{children:"scope"})," value, otherwise the script doesn't care\r\nwhat is inside. If you want to add new type like ",(0,i.jsx)(n.code,{children:"tool"})," for additional functionality feel free to do so."]})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.h2,{id:"tags",children:(0,i.jsx)(n.code,{children:"tags"})}),"\n",(0,i.jsx)(n.p,{children:"An array of tags that plugin implements, each tag must be a string."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    tags: ['controller', \"subscriber\"],\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.h2,{id:"requires",children:(0,i.jsx)(n.code,{children:"requires"})}),"\n",(0,i.jsx)(n.p,{children:"Defines plugin's dependencies, an array of strings."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    requires: ['boardmeister/marshal'],\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.h2,{id:"lazy",children:(0,i.jsx)(n.code,{children:"lazy"})}),"\n",(0,i.jsxs)(n.p,{children:["When plugin is defined as lazy it will not be loaded at the ",(0,i.jsx)(n.code,{children:"load"})," but instead will return a promise which resolved\r\nwill load and initialize the plugin."]}),"\n",(0,i.jsx)(n.admonition,{title:"Experimental feature.",type:"danger"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    lazy: true,\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.h2,{id:"asset",children:(0,i.jsx)(n.code,{children:"asset"})}),"\n",(0,i.jsx)(n.p,{children:"Object defining settings regarding assets loading."}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h3,{id:"src",children:[(0,i.jsx)(n.code,{children:"src"}),"*"]}),"\n",(0,i.jsxs)(n.p,{children:["The prefix path to where assets are located. Used by ",(0,i.jsx)(n.code,{children:"asset"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    asset: {\r\n        src: 'http://cdn.boardmeister.com/asset/'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example of usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"marshal.asset(aPlugin, 'logo.svg'); // resolves to http://cdn.boardmeister.com/asset/logo.svg\n"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.h2,{id:"resource",children:(0,i.jsx)(n.code,{children:"resource"})}),"\n",(0,i.jsx)(n.p,{children:"Object defining settings regarding resource loading (like lazy loaded components)."}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(n.h3,{id:"src-1",children:[(0,i.jsx)(n.code,{children:"src"}),"*"]}),"\n",(0,i.jsxs)(n.p,{children:["The prefix path to where components are located. Used by ",(0,i.jsx)(n.code,{children:"getResourceUrl"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\r\n    resource: {\r\n        src: 'http://cdn.boardmeister.com/resource/'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example of usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"marshal.getResourceUrl(aPlugin, 'label.js'); // resolves to http://cdn.boardmeister.com/resource/label.js\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var r=s(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);