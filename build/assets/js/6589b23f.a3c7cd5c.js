"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[7690],{5582:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"herald/listeners","title":"Listeners","description":"New event listeners can be registrated by using either listen or register. There is no significant difference except","source":"@site/docs/herald/listeners.md","sourceDirName":"herald","slug":"/herald/listeners","permalink":"/docs/herald/listeners","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/herald/listeners.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/docs/herald/installation"},"next":{"title":"Dispatching","permalink":"/docs/herald/dispatching"}}');var i=r(4848),s=r(8453);const o={sidebar_position:3},l="Listeners",a={},d=[{value:"Registration parameters",id:"registration-parameters",level:2},{value:"Registration object",id:"registration-object",level:3},{value:"<code>method</code>*",id:"method",level:3},{value:"<code>priority</code>",id:"priority",level:3},{value:"<code>constraint</code>",id:"constraint",level:3},{value:"<code>anchor</code>",id:"anchor",level:3},{value:"Register multiple events",id:"register-multiple-events",level:2},{value:"How to remove the listener",id:"how-to-remove-the-listener",level:2},{value:"Owned identifier",id:"owned-identifier",level:3},{value:"Generated method",id:"generated-method",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"listeners",children:"Listeners"})}),"\n",(0,i.jsxs)(n.p,{children:["New event listeners can be registrated by using either ",(0,i.jsx)(n.code,{children:"listen"})," or ",(0,i.jsx)(n.code,{children:"register"}),". There is no significant difference except\r\nusage:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="listen.ts"',children:"herald.listen({\r\n    event: 'event',\r\n    subscription: () => {\r\n        console.log('Event fired!');\r\n    },\r\n})\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="register.ts"',children:"herald.register(\"event\", () => {\r\n    console.log('Event fired!');\r\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For some cases it is better to have a function that accepts an object: it's more robust, flexible and easier to\r\nmaintain. But takes more space when used. As an alternative you can use ",(0,i.jsx)(n.code,{children:"register"})," which will result in smaller size but\r\nmight be harder to maintain, if, for example, new version introduces another parameter which will change order of\r\nthe arguments."]}),"\n",(0,i.jsx)(n.h2,{id:"registration-parameters",children:"Registration parameters"}),"\n",(0,i.jsx)(n.p,{children:"Registration accepts quite a few parameters, to make sure you have control over you event."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"event"}),"* - name of the event"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subscription"}),"* - methods/methods to execute when event fires. You can pass it in few ways:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"})," - just the name of the method to execute (like ",(0,i.jsx)(n.code,{children:'"onClick"'}),") which must be combined with ",(0,i.jsx)(n.code,{children:"constraint"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"herald.listen({\r\n    event: 'event',\r\n    subscription: 'onClick',\r\n    constraint: onClickHandlerObject,\r\n})\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"function"})," - normal function, potentially accepting the event"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"herald.listen({\r\n    event: 'event',\r\n    subscription: (e: CustomEvent) => {},\r\n})\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"object"})," - object defining details of event execution like priority"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"herald.listen({\r\n    event: 'event',\r\n    subscription: {\r\n        method: () => {},\r\n        priority: 0,\r\n        constraint: \"boardmeister/router\",\r\n        anchor: document.createElement('div'),\r\n    },\r\n})\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"array"})," - an array of subscription objects"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"herald.listen({\r\n    event: 'event',\r\n    subscription: [\r\n        {\r\n            method: () => {},\r\n            priority: 0,\r\n            constraint: \"boardmeister/router\",\r\n            anchor: document.createElement('div'),\r\n        }, {\r\n            method: () => {},\r\n        }, {\r\n            method: () => {},\r\n            priority: 20,\r\n            anchor: null,\r\n        }\r\n    ],\r\n})\n"})}),"\n",(0,i.jsx)(n.a,{href:"/docs/herald/listeners#registration-object",children:"Read more on subscription object"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"constraint"})," - name of the ",(0,i.jsx)(n.a,{href:"/docs/marshal/",children:"Marshal"})," plugin or just an object. Used primarily for integration\r\nwith Marshal."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sort"})," - should events be sorted after registration, defaults to ",(0,i.jsx)(n.code,{children:"true"}),". Pass ",(0,i.jsx)(n.code,{children:"false"})," if you know you will register\r\n20 new listeners and don't want to waste resources on unnecessary sorting."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"anchor"})," - a Node which is used as an anchor for identifying if to fire this listener on\r\n",(0,i.jsx)(n.a,{href:"/docs/herald/localized-events",children:"localized events"}),". For each subscription object without anchor, this one will be inserted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"symbol"})," - each registration has either autogenerated ",(0,i.jsx)(n.code,{children:"Symbol"})," or one given by the method. It is an ID of the\r\nregistration and is required when removing the event listener."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"registration-object",children:"Registration object"}),"\n",(0,i.jsx)(n.p,{children:"Registration object is probably the most important part of registration as it allows you to set multiple listeners on\r\nsingle event and decide on their priority among other things."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { OptionalSubscription } from \"@boardmeister/herald\";\r\n\r\nconst minimalSubscriptionObject: OptionalSubscription = {\r\n    method: (e: CustomEvent): Promise<void> => {\r\n        console.log('Event fired!');\r\n    },\r\n}\r\n\r\nconst maximalSubscriptionObject: OptionalSubscription = {\r\n    method: (e: CustomEvent): Promise<void> => {\r\n        console.log('Event fired!');\r\n    },\r\n    priority: 20,\r\n    constraint: \"boardmeister/plugin\",\r\n    anchor: document.createElement('div'),\r\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"method",children:[(0,i.jsx)(n.code,{children:"method"}),"*"]}),"\n",(0,i.jsxs)(n.p,{children:["Method is a required parameter of the object, one that defines the behavior of the listener. It can be either ",(0,i.jsx)(n.code,{children:"string"}),"\r\nor a ",(0,i.jsx)(n.code,{children:"function"}),", where if ",(0,i.jsx)(n.code,{children:"string"})," was passed you also have to define ",(0,i.jsx)(n.code,{children:"constraint"}),"."]}),"\n",(0,i.jsx)(n.admonition,{title:"Marshal integration",type:"tip",children:(0,i.jsxs)(n.p,{children:["Herald was created as a part of Marshal library, as a was for better communication between plugins. Each time you see a\r\n",(0,i.jsx)(n.code,{children:"constraint"})," it means it is a part of that integration."]})}),"\n",(0,i.jsx)(n.h3,{id:"priority",children:(0,i.jsx)(n.code,{children:"priority"})}),"\n",(0,i.jsx)(n.p,{children:"One of the core functionalities of this library is ability to set order of your listeners. This is the place to do it.\r\nIt can be any number - negative, decimal, zero - will be placed properly in the queue. Although events which fire on the\r\nsame time are sorted by the time of registration - who was quicker will be fired first."}),"\n",(0,i.jsx)(n.h3,{id:"constraint",children:(0,i.jsx)(n.code,{children:"constraint"})}),"\n",(0,i.jsxs)(n.p,{children:["Cen be either ",(0,i.jsx)(n.code,{children:"string"})," or ",(0,i.jsx)(n.code,{children:"object"})," - will be used to execute the listener when ",(0,i.jsx)(n.code,{children:"method"})," was passed as a ",(0,i.jsx)(n.code,{children:"string"}),".\r\nAs mentioned before this is a part of integration with ",(0,i.jsx)(n.code,{children:"Marshal"})," library to allow registration of event listeners that\r\ndon't exist of the time of registration."]}),"\n",(0,i.jsx)(n.h3,{id:"anchor",children:(0,i.jsx)(n.code,{children:"anchor"})}),"\n",(0,i.jsxs)(n.p,{children:["Used when preforming ",(0,i.jsx)(n.a,{href:"/docs/herald/localized-events",children:"localized events"}),", accepts any document ",(0,i.jsx)(n.code,{children:"Node"})," which will be used as\r\na reference of where in the page, this listener is listening. Events fired in specific places in document, are filtered\r\nbased on the position. If this isn't empty than this event listener will be partaking in the filtration. Overwrites the\r\n",(0,i.jsx)(n.code,{children:"anchor"})," from the method."]}),"\n",(0,i.jsx)(n.h2,{id:"register-multiple-events",children:"Register multiple events"}),"\n",(0,i.jsxs)(n.p,{children:["For cases when you have multiple events you want to listen to, there is ",(0,i.jsx)(n.code,{children:"batch"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"herald.batch([\r\n    {\r\n        event: 'event',\r\n        subscription: () => {},\r\n    },\r\n    {\r\n        event: 'event',\r\n        subscription: () => {},\r\n        constraint: null,\r\n        sort: true,\r\n        symbol: null,\r\n        anchor: null,\r\n    },\r\n])\n"})}),"\n",(0,i.jsxs)(n.p,{children:["It is quite literally an array of ",(0,i.jsx)(n.code,{children:"listen"})," methods. All the parameters work the same so for detailed explanation go\r\nback to the first paragraph."]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-remove-the-listener",children:"How to remove the listener"}),"\n",(0,i.jsxs)(n.p,{children:["There are two options: either you pass your own identifying ",(0,i.jsx)(n.code,{children:"symbol"})," when registrating and pass it along or use\r\ngenerated function returned by registration methods (",(0,i.jsx)(n.code,{children:"listen"}),", ",(0,i.jsx)(n.code,{children:"register"})," and ",(0,i.jsx)(n.code,{children:"batch"}),")."]}),"\n",(0,i.jsx)(n.h3,{id:"owned-identifier",children:"Owned identifier"}),"\n",(0,i.jsxs)(n.p,{children:["You can use your own ",(0,i.jsx)(n.code,{children:"symbol"})," to use for registration and removal. To do so you have to pass it during registration and\r\nuse ",(0,i.jsx)(n.code,{children:"unregister"})," later:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const myIdSymbol = Symbol('event-symbol');\r\nherald.listen({\r\n    event: 'my-event',\r\n    subscription: () => {},\r\n    symbol: myIdSymbol,\r\n});\r\nherald.unregister('my-event', myIdSymbol);\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Be aware!",type:"danger",children:(0,i.jsxs)(n.p,{children:["Be aware if you register two different listeners with the same symbol for the same event, ",(0,i.jsx)(n.code,{children:"unregister"})," will remove\r\nboth of them"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const myIdSymbol = Symbol('event-symbol');\r\nherald.listen({\r\n    event: 'my-event',\r\n    subscription: () => {\r\n        console.loh('Event 1!')\r\n    },\r\n    symbol: myIdSymbol,\r\n});\r\nherald.listen({\r\n    event: 'my-event',\r\n    subscription: () => {\r\n        console.loh('Event 2!')\r\n    },\r\n    symbol: myIdSymbol,\r\n});\r\nherald.unregister('my-event', myIdSymbol);\r\n\r\nawait herald.dispatch(new CustomEvent('my-event')); // No output!\n"})}),"\n",(0,i.jsx)(n.h3,{id:"generated-method",children:"Generated method"}),"\n",(0,i.jsxs)(n.p,{children:["The better idea would be to use special generated functions that registration methods\r\n(",(0,i.jsx)(n.code,{children:"listen"}),", ",(0,i.jsx)(n.code,{children:"register"})," and ",(0,i.jsx)(n.code,{children:"batch"}),") return:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const unregister = herald.register('my-event', () => {\r\n    console.log('Second event fired!')\r\n});\r\nconst unregisterListen = herald.listen({\r\n    event: 'my-event',\r\n    subscription: () => {\r\n        console.log('Event fired!')\r\n    },\r\n});\r\nconst unregisterBatch = herald.batch([{\r\n    event: 'my-event',\r\n    subscription: () => {\r\n        console.log('Third event fired!')\r\n    },\r\n}]);\r\n// Event fired!\r\n// Second event fired!\r\n// Third event fired!\r\nawait herald.dispatch(new CustomEvent('my-event'));\r\nunregister();\r\nunregisterListen();\r\nunregisterBatch();\r\n // No output!\r\nawait herald.dispatch(new CustomEvent('my-event'));\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);