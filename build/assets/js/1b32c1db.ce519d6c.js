"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[4391],{7472:(e,n,t)=>{t.r(n),t.d(n,{Preventable:()=>d,assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"dullahan/user/customization","title":"customization","description":"Following Dullahan principles Users module is highly customizable and extendable. Here you will find event definitions","source":"@site/docs/dullahan/user/customization.mdx","sourceDirName":"dullahan/user","slug":"/dullahan/user/customization","permalink":"/docs/dullahan/user/customization","draft":false,"unlisted":false,"editUrl":"https://github.com/Board-Meister/alexandria/blob/master/docs/dullahan/user/customization.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Customization"},"sidebar":"tutorialSidebar","previous":{"title":"Authentication","permalink":"/docs/dullahan/user/authentication"},"next":{"title":"Database Schema","permalink":"/docs/dullahan/user/database"}}');var r=t(4848),s=t(8453);const o={sidebar_position:3,sidebar_label:"Customization"},a="Customization",l={},d=()=>(0,r.jsx)("a",{href:"/docs/dullahan/events#preventable",target:"_blank",children:"Preventable."}),c=[{value:"Events",id:"events",level:2},{value:"Registration",id:"registration",level:3},{value:"<code>PreRegistration</code>",id:"preregistration",level:4},{value:"<code>RegistrationValidation</code>",id:"registrationvalidation",level:4},{value:"<code>PostRegistration</code>",id:"postregistration",level:4},{value:"Login",id:"login",level:3},{value:"<code>GetCSRF</code>",id:"getcsrf",level:4},{value:"<code>PostLogin</code>",id:"postlogin",level:4},{value:"<code>JWTHeaderCreate</code>",id:"jwtheadercreate",level:4},{value:"<code>JWTPayloadCreate</code>",id:"jwtpayloadcreate",level:4},{value:"How to guides",id:"how-to-guides",level:2},{value:"Custom CSRF token retrieval",id:"custom-csrf-token-retrieval",level:3},{value:"One session per user",id:"one-session-per-user",level:3},{value:"Custom JWT expiry time",id:"custom-jwt-expiry-time",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"customization",children:"Customization"})}),"\n",(0,r.jsx)(n.p,{children:"Following Dullahan principles Users module is highly customizable and extendable. Here you will find event definitions\r\nand few how-to guides for more difficult topics."}),"\n",(0,r.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(n.p,{children:"Most of the actions happen before, after and on the event calls, making it possible to extend or even replace\r\ndefault behavior of the framework by listening for the specific events."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="Symfony event listener example"',children:"use Dullahan\\User\\Presentation\\Event\\Transport\\PreRegistration;\r\nuse Symfony\\Component\\EventDispatcher\\Attribute\\AsEventListener;\r\n\r\nclass RegistrationListener\r\n{\r\n    #[AsEventListener(event: PreRegistration::class)]\r\n    public function onPreRegistration(PreRegistration $event): void\r\n    {\r\n        /// Handle the event!\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"registration",children:"Registration"}),"\n",(0,r.jsx)(n.h4,{id:"preregistration",children:(0,r.jsx)(n.code,{children:"PreRegistration"})}),"\n",(0,r.jsx)(n.p,{children:"Event fired before user tries to register himself."}),"\n",(0,r.jsx)(n.h4,{id:"registrationvalidation",children:(0,r.jsx)(n.code,{children:"RegistrationValidation"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(d,{})," Event responsible for registration validation."]}),"\n",(0,r.jsx)(n.h4,{id:"postregistration",children:(0,r.jsx)(n.code,{children:"PostRegistration"})}),"\n",(0,r.jsx)(n.p,{children:"Event fires if registration was successful and user was created."}),"\n",(0,r.jsx)(n.h3,{id:"login",children:"Login"}),"\n",(0,r.jsx)(n.h4,{id:"getcsrf",children:(0,r.jsx)(n.code,{children:"GetCSRF"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(d,{})," Fires during User authorization. Retrieves CSRF token from the request."]}),"\n",(0,r.jsx)(n.h4,{id:"postlogin",children:(0,r.jsx)(n.code,{children:"PostLogin"})}),"\n",(0,r.jsx)(n.p,{children:"Fires after successful login."}),"\n",(0,r.jsx)(n.h4,{id:"jwtheadercreate",children:(0,r.jsx)(n.code,{children:"JWTHeaderCreate"})}),"\n",(0,r.jsxs)(n.p,{children:["Event responsible for assembling the header of JWT token. Starts with already set\r\n",(0,r.jsx)(n.a,{href:"/docs/dullahan/user/authentication#prologing-current-session",children:"default headers"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"jwtpayloadcreate",children:(0,r.jsx)(n.code,{children:"JWTPayloadCreate"})}),"\n",(0,r.jsxs)(n.p,{children:["Event responsible for assembling the payload of JWT token. Starts with already set\r\n",(0,r.jsx)(n.a,{href:"/docs/dullahan/user/authentication#csrf-token",children:"default payload"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"User bundle is currently being refactor into Event Core structure. Additional events for resetting password or changing\r\nemail will appear shortly."})}),"\n",(0,r.jsx)(n.h2,{id:"how-to-guides",children:"How to guides"}),"\n",(0,r.jsx)(n.h3,{id:"custom-csrf-token-retrieval",children:"Custom CSRF token retrieval"}),"\n",(0,r.jsxs)(n.p,{children:["If the default CSRF token placement (custom header ",(0,r.jsx)(n.code,{children:"X-CSRF-Token"}),") is not to your specification you can easily change\r\nfrom where it is retrieved be listening for ",(0,r.jsx)(n.code,{children:"GetCSRF"})," event."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="Retrieve csrf token from cookie"',children:"use Dullahan\\User\\Presentation\\Event\\Transport\\GetCSRF;\r\nuse Symfony\\Component\\EventDispatcher\\Attribute\\AsEventListener;\r\n\r\nclass CSRFListener\r\n{\r\n    #[AsEventListener(event: GetCSRF::class)]\r\n    public function onGetCSRF(GetCSRF $event): void\r\n    {\r\n        $event->preventDefault(); # Prevent default behavior\r\n        $event->setCsrf($event->getRequest()->getCookie('csrf-token'));\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"one-session-per-user",children:"One session per user"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"There is no one correct way of doing it, so this is more of a advise then a guide."})}),"\n",(0,r.jsxs)(n.p,{children:["Each JWT token in its payload has ",(0,r.jsx)(n.code,{children:"session"})," with UUIDv7 inside of it as a session identifier. You could save this\r\nidentifier next to user ID in a OneToOne fashion (be it a key-value store like Redis or new table/field in MySQL\r\ndatabase) and do not accept tokens that don't match this relation."]}),"\n",(0,r.jsxs)(n.p,{children:["Each time new token is created, the ",(0,r.jsx)(n.code,{children:"session"})," parameter will update the session ","<->"," user ID relation making it the\r\nonly currently valid token."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="Example of implementation"',children:"use Dullahan\\User\\Domain\\AccessControlService;\r\nuse Dullahan\\User\\Domain\\Exception\\AccessDeniedHttpException;\r\n\r\nfinal class SingleSessionAccessControl extends AccessControlService\r\n{\r\n    public function __construct(\r\n        string $secret,\r\n        AuthorizationCheckerInterface $authorizationChecker,\r\n        EventDispatcherInterface $eventDispatcher,\r\n        private UserSessionRepository $userSessionRepository, // Some custom repository for verifying session state in database\r\n    ) {\r\n        parent::__construct(secret, authorizationChecker, eventDispatcher);\r\n    }\r\n\r\n    public function validateTokenCredibility(RequestInterface $request, array $tokenPayload): void\r\n    {\r\n        parent::validateTokenCredibility($request, $tokenPayload);\r\n\r\n        ['session' => $session, 'user_id' => $userId] = $tokenPayload;\r\n\r\n        if (!$this->userSessionRepository->isValidSession($userId, $session)) {\r\n            throw new AccessDeniedHttpException('Invalid session');\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["If you are going to implement it using this method make sure that your new class is properly bonded to\r\n",(0,r.jsx)(n.code,{children:"AccessControlInterface"})," interface."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# config/services.yaml\r\nservices:\r\n    Dullahan\\User\\Port\\Application\\AccessControlInterface: '@App\\Foo\\SingleSessionAccessControl'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-jwt-expiry-time",children:"Custom JWT expiry time"}),"\n",(0,r.jsxs)(n.p,{children:["To change the expiry time of the JWT token you need to listen for ",(0,r.jsx)(n.code,{children:"JWTHeaderCreate"})," event and change ",(0,r.jsx)(n.code,{children:"exp"})," header\r\nto the needed time. ",(0,r.jsx)(n.code,{children:"exp"})," header is a timestamp in seconds."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="Retrieve csrf token from cookie"',children:"use Dullahan\\User\\Presentation\\Event\\Transport\\JWTHeaderCreate;\r\nuse Symfony\\Component\\EventDispatcher\\Attribute\\AsEventListener;\r\n\r\nclass JWTListener\r\n{\r\n    #[AsEventListener(event: JWTHeaderCreate::class)]\r\n    public function onJWTHeaderCreate(JWTHeaderCreate $event): void\r\n    {\r\n        $headers = $event->getHeader();\r\n        $headers['exp'] = time() + 60 * 15; // 15 minutes\r\n        $event->setHeader($headers);\r\n    }\r\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);