"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Marshal","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/marshal/","docId":"marshal/README","unlisted":false},{"type":"link","label":"Installation","href":"/docs/marshal/installation","docId":"marshal/installation","unlisted":false},{"type":"link","label":"Dependencies","href":"/docs/marshal/dependency","docId":"marshal/dependency","unlisted":false},{"type":"category","label":"Scope","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating scope","href":"/docs/marshal/scope/","docId":"marshal/scope/README","unlisted":false},{"type":"link","label":"Aliasing","href":"/docs/marshal/scope/aliasing","docId":"marshal/scope/aliasing","unlisted":false},{"type":"link","label":"Obscure libraries","href":"/docs/marshal/scope/obscure","docId":"marshal/scope/obscure","unlisted":false}],"href":"/docs/category/scope"},{"type":"link","label":"Loading resources","href":"/docs/marshal/loading-resources","docId":"marshal/loading-resources","unlisted":false},{"type":"link","label":"Tagging plugins","href":"/docs/marshal/tags","docId":"marshal/tags","unlisted":false},{"type":"link","label":"Registration cheat sheet","href":"/docs/marshal/registration","docId":"marshal/registration","unlisted":false},{"type":"link","label":"API","href":"/docs/marshal/methods","docId":"marshal/methods","unlisted":false}],"href":"/docs/category/marshal"},{"type":"category","label":"Herald","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/herald/","docId":"herald/README","unlisted":false},{"type":"link","label":"Installation","href":"/docs/herald/installation","docId":"herald/installation","unlisted":false},{"type":"link","label":"Listeners","href":"/docs/herald/listeners","docId":"herald/listeners","unlisted":false},{"type":"link","label":"Dispatching","href":"/docs/herald/dispatching","docId":"herald/dispatching","unlisted":false},{"type":"link","label":"Localized events","href":"/docs/herald/localized-events","docId":"herald/localized-events","unlisted":false}],"href":"/docs/category/herald"},{"type":"category","label":"Dullahan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/","docId":"dullahan/README","unlisted":false},{"type":"link","label":"Rest API","href":"/docs/dullahan/api","docId":"dullahan/api","unlisted":false},{"type":"link","label":"Events","href":"/docs/dullahan/events","docId":"dullahan/events","unlisted":false},{"type":"link","label":"Architecture","href":"/docs/dullahan/architecture","docId":"dullahan/architecture","unlisted":false},{"type":"category","label":"User Bundle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/user/","docId":"dullahan/user/README","unlisted":false},{"type":"link","label":"Configuration","href":"/docs/dullahan/user/configuration","docId":"dullahan/user/configuration","unlisted":false},{"type":"link","label":"Authentication","href":"/docs/dullahan/user/authentication","docId":"dullahan/user/authentication","unlisted":false},{"type":"link","label":"Customization","href":"/docs/dullahan/user/customization","docId":"dullahan/user/customization","unlisted":false},{"type":"link","label":"Database Schema","href":"/docs/dullahan/user/database","docId":"dullahan/user/database","unlisted":false}],"href":"/docs/category/user-bundle"},{"type":"category","label":"Entity Bundle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/entity/","docId":"dullahan/entity/README","unlisted":false},{"type":"link","label":"First Entity","href":"/docs/dullahan/entity/first_object","docId":"dullahan/entity/first_object","unlisted":false},{"type":"link","label":"Field Attribute","href":"/docs/dullahan/entity/field_attribute","docId":"dullahan/entity/field_attribute","unlisted":false},{"type":"link","label":"Entity API","href":"/docs/dullahan/entity/crud","docId":"dullahan/entity/crud","unlisted":false},{"type":"link","label":"Events","href":"/docs/dullahan/entity/event","docId":"dullahan/entity/event","unlisted":false},{"type":"link","label":"Manage interfaces","href":"/docs/dullahan/entity/programatically_manage","docId":"dullahan/entity/programatically_manage","unlisted":false},{"type":"link","label":"Serialization & Caching","href":"/docs/dullahan/entity/serialization_caching","docId":"dullahan/entity/serialization_caching","unlisted":false}],"href":"/docs/category/entity-bundle"},{"type":"category","label":"Asset Bundle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/asset/","docId":"dullahan/asset/README","unlisted":false},{"type":"link","label":"Asset API","href":"/docs/dullahan/asset/crud","docId":"dullahan/asset/crud","unlisted":false},{"type":"link","label":"Manage interfaces","href":"/docs/dullahan/asset/programatically_manage","docId":"dullahan/asset/programatically_manage","unlisted":false},{"type":"link","label":"Entity integration","href":"/docs/dullahan/asset/entity_integration","docId":"dullahan/asset/entity_integration","unlisted":false},{"type":"link","label":"Events","href":"/docs/dullahan/asset/event","docId":"dullahan/asset/event","unlisted":false}],"href":"/docs/category/asset-bundle"},{"type":"category","label":"Thumbnail Bundle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/thumbnail/","docId":"dullahan/thumbnail/README","unlisted":false},{"type":"link","label":"Asset Bundle extension","href":"/docs/dullahan/thumbnail/modification_asset","docId":"dullahan/thumbnail/modification_asset","unlisted":false},{"type":"link","label":"Entity Bundle integration","href":"/docs/dullahan/thumbnail/integration_entity","docId":"dullahan/thumbnail/integration_entity","unlisted":false},{"type":"link","label":"Manage interfaces","href":"/docs/dullahan/thumbnail/interfaces","docId":"dullahan/thumbnail/interfaces","unlisted":false}],"href":"/docs/category/thumbnail-bundle"},{"type":"category","label":"Monitor Bundle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/monitor/","docId":"dullahan/monitor/README","unlisted":false},{"type":"link","label":"Persisted errors","href":"/docs/dullahan/monitor/persisted_error","docId":"dullahan/monitor/persisted_error","unlisted":false}],"href":"/docs/category/monitor-bundle"},{"type":"category","label":"Main Bundle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/docs/dullahan/main/","docId":"dullahan/main/README","unlisted":false},{"type":"link","label":"REST API","href":"/docs/dullahan/main/api","docId":"dullahan/main/api","unlisted":false},{"type":"link","label":"Utility","href":"/docs/dullahan/main/util","docId":"dullahan/main/util","unlisted":false},{"type":"link","label":"Events","href":"/docs/dullahan/main/event","docId":"dullahan/main/event","unlisted":false}],"href":"/docs/category/main-bundle"}],"href":"/docs/category/dullahan"}]},"docs":{"dullahan/api":{"id":"dullahan/api","title":"Rest API","description":"Dullahan allows for communication with architectural style of Rest API.","sidebar":"tutorialSidebar"},"dullahan/architecture":{"id":"dullahan/architecture","title":"Architecture","description":"Dullahan modules are developed in Event-driven development following Event Core rules. Event Core is a term created to","sidebar":"tutorialSidebar"},"dullahan/asset/crud":{"id":"dullahan/asset/crud","title":"Asset API","description":"Asset Bundle comes packaged with REST API for managing your assets. Core idea is to produce a tools that will allow","sidebar":"tutorialSidebar"},"dullahan/asset/entity_integration":{"id":"dullahan/asset/entity_integration","title":"Entity integration","description":"Asset Bundle has a build way to define asset fields inside entities managed by","sidebar":"tutorialSidebar"},"dullahan/asset/event":{"id":"dullahan/asset/event","title":"Events","description":"Asset bundle does not implement Event Core completely, yet. But at the current state we are executing most actions","sidebar":"tutorialSidebar"},"dullahan/asset/programatically_manage":{"id":"dullahan/asset/programatically_manage","title":"Manage interfaces","description":"For programmatic use of the Asset Bundle we have set few interfaces:","sidebar":"tutorialSidebar"},"dullahan/asset/README":{"id":"dullahan/asset/README","title":"Intro","description":"Asset bundle is responsible for managing asset like documents or images. It gives you an ability to handle assets,","sidebar":"tutorialSidebar"},"dullahan/entity/crud":{"id":"dullahan/entity/crud","title":"Entity API","description":"API for managing Entities is flexible enough to accommodate for most CRUD calls. The idea is to not create separate","sidebar":"tutorialSidebar"},"dullahan/entity/event":{"id":"dullahan/entity/event","title":"Events","description":"This bundle follows Event Core principals which means that all actions","sidebar":"tutorialSidebar"},"dullahan/entity/field_attribute":{"id":"dullahan/entity/field_attribute","title":"Field Attribute","description":"The Field attribute is a little more then just a marker. It gives ability to attach few static properties to the","sidebar":"tutorialSidebar"},"dullahan/entity/first_object":{"id":"dullahan/entity/first_object","title":"Your first Entity","description":"Creating entity requires a few things to start:","sidebar":"tutorialSidebar"},"dullahan/entity/programatically_manage":{"id":"dullahan/entity/programatically_manage","title":"Manage interfaces","description":"For programmatic use of the Entity Bundle we have set few interfaces:","sidebar":"tutorialSidebar"},"dullahan/entity/README":{"id":"dullahan/entity/README","title":"Intro","description":"Entity bundle is responsible for dataset definition. Manages object life cycle (CRUD), access permissions, bulk actions,","sidebar":"tutorialSidebar"},"dullahan/entity/serialization_caching":{"id":"dullahan/entity/serialization_caching","title":"Serialization & Caching","description":"It is important to have adequate serialization technics when sending data across the wire. All API End Points use the","sidebar":"tutorialSidebar"},"dullahan/events":{"id":"dullahan/events","title":"Events","description":"Preventable","sidebar":"tutorialSidebar"},"dullahan/main/api":{"id":"dullahan/main/api","title":"REST API","description":"For the REST API we can find quite a few classes and functionality:","sidebar":"tutorialSidebar"},"dullahan/main/event":{"id":"dullahan/main/event","title":"Events","description":"To help creating events Main Bundle comes with two abstracts: EventAbstract and SagaAbstract.","sidebar":"tutorialSidebar"},"dullahan/main/README":{"id":"dullahan/main/README","title":"Intro","description":"Main Bundle is a shared repository for widely used interfaces, exceptions or classes. It holds all functionality that","sidebar":"tutorialSidebar"},"dullahan/main/util":{"id":"dullahan/main/util","title":"Utility","description":"Main Bundle comes with few utility classes to give additional options to possible issues.","sidebar":"tutorialSidebar"},"dullahan/monitor/persisted_error":{"id":"dullahan/monitor/persisted_error","title":"Persisted errors","description":"The Monitor Bundles persist unexpected errors with Trace entity which holds information about the error, request and","sidebar":"tutorialSidebar"},"dullahan/monitor/README":{"id":"dullahan/monitor/README","title":"Intro","description":"Monitor Bundle is a internal tool for recording critical errors to help with debugging. It automatically saves","sidebar":"tutorialSidebar"},"dullahan/README":{"id":"dullahan/README","title":"Intro","description":"Dullahan is modular, headless, Product Information and Digital Asset Management system, developed for accelerating","sidebar":"tutorialSidebar"},"dullahan/thumbnail/integration_entity":{"id":"dullahan/thumbnail/integration_entity","title":"Entity Bundle integration","description":"Integration with Entity Bundle is achieved by Thumbnail attribute. Field marked with Asset attribute can be","sidebar":"tutorialSidebar"},"dullahan/thumbnail/interfaces":{"id":"dullahan/thumbnail/interfaces","title":"Manage interfaces","description":"For programmatic use of the Thumbnail Bundle we have set few interfaces:","sidebar":"tutorialSidebar"},"dullahan/thumbnail/modification_asset":{"id":"dullahan/thumbnail/modification_asset","title":"Asset Bundle extension","description":"Thumbnails go straight into Asset Bundle life cycle - extending REST API responses or generating relations to the","sidebar":"tutorialSidebar"},"dullahan/thumbnail/README":{"id":"dullahan/thumbnail/README","title":"Intro","description":"Thumbnail Bundle is responsible for generating image thumbnails and auto-managing their life cycle. It requires","sidebar":"tutorialSidebar"},"dullahan/user/authentication":{"id":"dullahan/user/authentication","title":"Authentication","description":"Authentication relies on generating JWT token with /_/login endpoint, sending it in Authorization as Bearer","sidebar":"tutorialSidebar"},"dullahan/user/configuration":{"id":"dullahan/user/configuration","title":"Configuration","description":"For authorization Dullahan uses Symfony Security bundle","sidebar":"tutorialSidebar"},"dullahan/user/customization":{"id":"dullahan/user/customization","title":"customization","description":"Following Dullahan principles Users module is highly customizable and extendable. Here you will find event definitions","sidebar":"tutorialSidebar"},"dullahan/user/database":{"id":"dullahan/user/database","title":"Database Schema","description":"User bundles is made of two tables: user (User entity) and user_data (UserData entity). Each row in user table","sidebar":"tutorialSidebar"},"dullahan/user/README":{"id":"dullahan/user/README","title":"Intro","description":"User bundle is responsible for permissions, user registration, authorization, token generation, password resetting,","sidebar":"tutorialSidebar"},"herald/dispatching":{"id":"herald/dispatching","title":"Dispatching events","description":"There are two methods for dispatching events. One for asynchronous calls and one for synchronous. There is no","sidebar":"tutorialSidebar"},"herald/installation":{"id":"herald/installation","title":"Installation","description":"To install Herald you can use your package manager to add it as a dependency, for example:","sidebar":"tutorialSidebar"},"herald/listeners":{"id":"herald/listeners","title":"Listeners","description":"New event listeners can be registrated by using either listen or register. There is no significant difference except","sidebar":"tutorialSidebar"},"herald/localized-events":{"id":"herald/localized-events","title":"Localized events","description":"Sometime you want to fire an event that only a specific group of listeners will receive - something scoped, for","sidebar":"tutorialSidebar"},"herald/README":{"id":"herald/README","title":"Intro","description":"Herald is a asynchronous, prioritizable event handler. It allows you to trigger asynchronous events in a specific","sidebar":"tutorialSidebar"},"marshal/dependency":{"id":"marshal/dependency","title":"Dependencies","description":"Marshal, as any package manager, allows you to define your dependencies and automatically loads them for you.","sidebar":"tutorialSidebar"},"marshal/installation":{"id":"marshal/installation","title":"Installation","description":"To install Marshal you can use your package manager to add it as a dependency, for example:","sidebar":"tutorialSidebar"},"marshal/loading-resources":{"id":"marshal/loading-resources","title":"Loading Resources","description":"Loading additional resources like images or lazy loaded components might be a little hard if you don\'t know from where","sidebar":"tutorialSidebar"},"marshal/methods":{"id":"marshal/methods","title":"Marshal API","description":"Marshal has a few methods and properties open to let you manage your plugins or extends manager itself.","sidebar":"tutorialSidebar"},"marshal/README":{"id":"marshal/README","title":"Intro","description":"Marshal is a swappable, scopeable, dynamic, client side plugin manager packaged with dependency injection. That\'s a","sidebar":"tutorialSidebar"},"marshal/registration":{"id":"marshal/registration","title":"Registration cheat sheet","description":"This document explains all parameters of registration config used to register new plugin.","sidebar":"tutorialSidebar"},"marshal/scope/aliasing":{"id":"marshal/scope/aliasing","title":"Aliasing","description":"When using scoped global variables it might be inconvenient to use them over the old way. We have to add additional","sidebar":"tutorialSidebar"},"marshal/scope/obscure":{"id":"marshal/scope/obscure","title":"Aliasing obscure libraries","description":"Some libraries are obscured from sight and added in background during build process. For those we have to implement","sidebar":"tutorialSidebar"},"marshal/scope/README":{"id":"marshal/scope/README","title":"Creating scope","description":"As said in Intro some modules we have to access globally, not just inside our functions - but still not","sidebar":"tutorialSidebar"},"marshal/tags":{"id":"marshal/tags","title":"Tagging plugins","description":"In you registration you can tag a plugin. By tagging I means assigning specific labels by which they can","sidebar":"tutorialSidebar"}}}}')}}]);